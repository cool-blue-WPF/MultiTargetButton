<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ContentToggleButton.Converters">

    <ControlTemplate x:Key="ControlTemplate" TargetType="{x:Type ButtonBase}">

        <ControlTemplate.Resources>
            <converters:ContentConverter x:Key="ContentConverter" />
        </ControlTemplate.Resources>

        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                <ContentPresenter.Content>
                    <MultiBinding Converter="{StaticResource ContentConverter}">
                        <!--This assumes that the templated control impliments IContent
                            This will update initialy when Options is set and each time IsChecked changes-->
                        <Binding Path="Options" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="IsChecked" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                </ContentPresenter.Content>

            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border"
                        Value="{DynamicResource 
                                                {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border"
                        Value="{DynamicResource Button.MouseOver.Background}" />
                <Setter Property="BorderBrush" TargetName="border"
                        Value="{DynamicResource Button.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border"
                        Value="{DynamicResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush" TargetName="border"
                        Value="{DynamicResource Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border"
                        Value="{DynamicResource Button.Checked.Background}" />
                <Setter Property="BorderBrush" TargetName="border"
                        Value="{DynamicResource Button.Static.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border"
                        Value="{DynamicResource Button.Disabled.Background}" />
                <Setter Property="BorderBrush" TargetName="border"
                        Value="{DynamicResource Button.Disabled.Border}" />
                <Setter Property="TextElement.Foreground"
                        TargetName="contentPresenter"
                        Value="{DynamicResource Button.Disabled.Foreground}" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ToggleButton.IsChecked" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" TargetName="border"
                            Value="{DynamicResource 
                                            Button.MouseOver.Checked.Background}" />
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ToggleButton.IsChecked" Value="True" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" TargetName="border"
                            Value="{DynamicResource 
                                            Button.Pressed.Background}" />
                </MultiTrigger.Setters>
            </MultiTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>